$date
	Sat Nov 12 20:56:39 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module alu_tb $end
$var wire 1 ! sign $end
$var wire 8 " result [7:0] $end
$var wire 1 # ov $end
$var wire 1 $ cout $end
$var reg 8 % a [7:0] $end
$var reg 8 & b [7:0] $end
$var reg 4 ' op [3:0] $end
$scope module alu_instance $end
$var wire 8 ( a [7:0] $end
$var wire 8 ) b [7:0] $end
$var wire 4 * op [3:0] $end
$var reg 1 $ cout $end
$var reg 1 # ov $end
$var reg 8 + result [7:0] $end
$var reg 1 ! sign $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1 +
b0 *
b10000001 )
b10000000 (
b0 '
b10000001 &
b10000000 %
1$
1#
b1 "
0!
$end
#10
1!
0$
b10000010 "
b10000010 +
b11 &
b11 )
b1111111 %
b1111111 (
#20
0!
0#
1$
b10 "
b10 +
b10000011 &
b10000011 )
#30
1!
b11111110 "
b11111110 +
b10000001 &
b10000001 )
b1 '
b1 *
#40
b11111111 "
b11111111 +
b10000000 %
b10000000 (
#50
0!
0$
b1111100 "
b1111100 +
b11 &
b11 )
b1111111 %
b1111111 (
#60
b11 "
b11 +
b10 '
b10 *
#70
b1111111 "
b1111111 +
b11 '
b11 *
#80
b1111100 "
b1111100 +
b100 '
b100 *
#90
1!
1#
1$
b10000000 "
b10000000 +
b101 '
b101 *
#100
0!
0#
0$
b111111 "
b111111 +
b110 '
b110 *
#110
1!
1#
b11111110 "
b11111110 +
b111 '
b111 *
#120
